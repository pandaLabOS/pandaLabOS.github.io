{"version":3,"file":"component---src-pages-blog-new-js-b3e5736fd311014103b3.js","mappings":"iOAIe,SAASA,IAEpB,MAEMC,EAAUC,EAAAA,UACTC,EAAOC,GAAYF,EAAAA,SAAe,KAClCG,EAAUC,GAAeJ,EAAAA,SAAe,KACxCK,EAASC,GAAcN,EAAAA,UAAe,GAC7CA,EAAAA,UAAe,QAEZ,IAiCH,OAAO,gBAAC,IAAS,KACb,sCACA,gBAAC,EAAAO,KAAI,CAACC,GAAK,SAAO,aAClB,gBAAC,IAAG,KACA,gBAAC,IAAI,CAACC,IAAKV,GACP,gBAAC,UAAU,CAACW,UAAU,SAClB,gBAAC,UAAU,cACX,gBAAC,YAAY,CAACC,KAAK,OAAOC,YAAY,iBAE1C,gBAAC,UAAU,CAACF,UAAU,WAClB,gBAAC,UAAU,gBACX,gBAAC,YAAY,CAACG,GAAG,WAAWC,KAAM,KAEtC,gBAAC,UAAU,CAACJ,UAAU,UAClB,gBAAC,UAAU,eACX,gBAAC,YAAY,CAACC,KAAK,OAAOC,YAAY,kBAE1C,gBAAC,IAAM,CAACG,QAAQ,OAAOC,QAhDbC,IAClBA,EAAMC,iBACN,MAAMC,EAAO,CACTC,MAAOrB,EAAQsB,QAAQD,MAAME,MAC7BC,QAASxB,EAAQsB,QAAQE,QAAQD,MACjCE,OAAQzB,EAAQsB,QAAQG,OAAOF,OAEnCG,QAAQC,IAAIP,GAEZQ,MAnBW,uEAmBG,CACVC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUb,KAExBc,MAAMC,GAAOA,EAAIC,SACjBF,MAAMG,IACHX,QAAQC,IAAI,UAAWU,GACvBC,MAAM,UAAU,GAClB,GA4BmD,UAI7D,C","sources":["webpack://ornwara-gatsby/./src/pages/blog/new.js"],"sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { Form, Card, Container, Button, Row } from 'react-bootstrap'\n\nexport default function BlogPage() {\n\n    const apiUrl = 'https://sample-blog-express-78qzajv5h-mchayapol.vercel.app/api/blogs'\n\n    const formRef = React.useRef()\n    const [blogs, setBlogs] = React.useState([])\n    const [blogList, setBlogList] = React.useState([])\n    const [loading, setLoading] = React.useState(true)\n    React.useState(() => {\n\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const blog = {\n            topic: formRef.current.topic.value,\n            content: formRef.current.content.value,\n            author: formRef.current.author.value,\n        }\n        console.log(blog)\n\n        fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(blog)\n        })\n        .then (res => res.json())\n        .then (doc => {\n            console.log(\"Created\", doc)\n            alert(\"Created\")\n        })\n\n        //JSON.stringify(data) = object > string\n        //JSON.parse(data) = string > object\n        /* \n        The data needs to be converted to text before it can be sent via HTTP\n        because HTTP can only transmit text. Any form of data, whether it's an image, number,\n        object, or binary code, must be converted to text using stringify before being transmitted.\n        */\n    }\n\n    return <Container>\n        <h1>New Blog</h1>\n        <Link to = \"/blog\">Blog Home</Link>\n        <Row>\n            <Form ref={formRef}>\n                <Form.Group controlId=\"topic\">\n                    <Form.Label>Topic</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter topic\" />\n                </Form.Group>\n                <Form.Group controlId=\"content\">\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} />\n                </Form.Group>\n                <Form.Group controlId=\"author\">\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter author\" />\n                </Form.Group>\n                <Button variant=\"dark\" onClick={handleSubmit}>Save</Button>\n            </Form>\n        </Row>\n    </Container>\n}"],"names":["BlogPage","formRef","React","blogs","setBlogs","blogList","setBlogList","loading","setLoading","Link","to","ref","controlId","type","placeholder","as","rows","variant","onClick","event","preventDefault","blog","topic","current","value","content","author","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","doc","alert"],"sourceRoot":""}